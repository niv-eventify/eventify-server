.side-box-row
  %ul.link-box
    %li{:class => rsvp_item_class(resource.rsvp)}
      %a
        != resource.rsvp_text
    %li.item-text
      != link_to_remote s_("change RSVP|change"), :url => edit_rsvp_path(resource.email_token), :method => :get

  - form_for :guest, resource, :url => rsvp_path(resource.email_token), :html => {:class => "answered-form", :method => :put} do |f|
    %fieldset
      - if resource.can_change_number_of_guests?
        .row
          .hold
            %label{:for => "rsvp_attendees_count"}= _("Number of Guests")
            .text
              != f.text_field :attendees_count, :id => "rsvp_attendees_count", :maxlength => "3"
      .row2
        %label{:for => "guest_message_to_host"}= _("Send a message to the host:")
        %span.textarea
          != text_area_tag "guest[message_to_host]", resource.message_to_host, :id => "guest_message_to_host"
        = _("Note: your message is public")
    .btns-hold.update-rsvp{:style => "display:none"}
      != link_to_function _("send"), "jQuery(this).parents('form').get(0).submit()"
      != link_to_function _("cancel"), "guest_rsvp.cancel()"

:javascript
  var guest_rsvp = {
    attendees_count: #{resource.attendees_count.to_json},
    message_to_host: #{resource.message_to_host.to_json},
    cancel: function() {
      jQuery('#rsvp_attendees_count').val(guest_rsvp.attendees_count || "1");
      jQuery('#guest_message_to_host').val(guest_rsvp.message_to_host || "");
      jQuery(".btns-hold.update-rsvp").hide();
    }
  };
  jQuery(function(){
    var show_buttons = function(){ jQuery(".btns-hold.update-rsvp").show(); };
    jQuery(".side-box-row input, .side-box-row textarea").focus(show_buttons).click(show_buttons).keyup(show_buttons);
    jQuery(".side-box-row input").numeric();
    if(guest_rsvp.message_to_host.length > 0 || "#{@updated}" == "true") return;
    if(jQuery("#rsvp_attendees_count").is(":visible"))
        jQuery("#rsvp_attendees_count").focus();
    else
        jQuery("#guest_message_to_host").focus();
  });