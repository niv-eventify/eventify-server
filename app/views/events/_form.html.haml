- content_for(:head) do
  != months_arr

!= hidden_field_tag "wizard", params[:wizard]

= f.object.errors.on(:base)

- f.inputs do
  - unless logged_in?
    .not-logged-in-event-details
      - f.fields_for :user do |user_f|
        - event_text_input(user_f, :name, _("Your Name"), {:required => true}, "#{_('ex. John Doe')}")
        - event_text_input(user_f, :email, _("Your Email"), {:required => true}, "#{_('ex. john.doe@gmail.com')}")
        .f-row
          != link_to_function _("I already have an account"), "jQuery('li.btn-2 a.opener').click();jQuery('#user_session_email').focus()", :class => "add-link"

  - event_text_input(f, :name, _("Event name"), {:required => true}, "#{_('ex. My 40th birthday')}")
  != f.input :category, :label => _("Event Type"), :required => nil, :collection => categories_for_select

  - event_date_time_select_combo(f, :starting_at) do
    .f-row
      != link_to_function _("Add End date &amp; Time"), "stage2.show_ending_at_block()", :class => "add-link show_ending_at", :style => "display:none"
      != link_to_function _("Remove End date &amp; Time"), "stage2.hide_ending_at_block()", :class => "remove-link hide_ending_at"

- f.inputs :class => "ending_at_block" do
  - event_date_time_select_combo(f, :ending_at) do
    .f-row &nbsp;

- f.inputs :class => "location_section" do
  - event_text_input(f, :location_name, _("Location"), {}, "#{_('ex. The Neighberhood Bar')}")
  - event_text_input(f, :location_address, _("Address"), {}, "#{_('ex. 5th Avenue, Manhattan')}") do
    - unless f.object.has_map?
      .f-row
        != link_to_function _("Add Map"), "jQuery(this).hide();jQuery('.map-section').toggle()", :class => "add-link"
- f.inputs :class => "map-section", :style => (f.object.has_map? ? "" : "display:none") do
  != link_to(_("find address"), "http://maps.google.com/?hl=he", :target => "_blank", :id => "find_address", :alert => _("You must fill out the address field in order to find a map"), :ex_text => _("ex. 5th Avenue, Manhattan"))
  - event_text_input(f, :map_link, _("Map Link"), :live => false, :input_html => {:class => "input-text", :maxlength => "2048"}) do
    = _("or")
  != f.input(:map, :as => :file, :label => _("Map Image"))
  - unless f.object.map.url.blank?
    .f-row.current_map_iamges
      != link_to _("Current Map Image"), f.object.map.url, :target => "_blank"
      != link_to_remote _("Remove"), :url => event_event_maps_path(f.object), :method => :delete, :confirm => _("Are you sure?"), :before => "jQuery('.current_map_iamges').remove()", :after => "jQuery('#event_map_link').val('')"

!= form_divider
- f.inputs do
  - event_input_text(f, :guest_message, _("Message to Guests"), _("(345 symbols max)"), "#{_("ex. Please come and celebrate my 40th birthday.&#13;&#10;On the 20th of June at 22:00 &#13;&#10;at The Neighborhood Bar")}")
  %li.boolean.optional.allow_seeing_other_guests.auto_width
    != f.check_box :allow_seeing_other_guests
    != f.label :allow_seeing_other_guests, _("Guests can see other attendees")

- if @event.any_invitation_sent?
  != f.input :resend_invitations, :as => :hidden
  != render(:partial => "monit_changes")

:javascript
  jQuery(function(){
    jQuery(".side-area input").unload_monit(#{_("You didn't save the event.").to_json});
    jQuery('.form.new-event').submit(function(){
      jQuery.fn.unload_monit_reset();
    });
  });